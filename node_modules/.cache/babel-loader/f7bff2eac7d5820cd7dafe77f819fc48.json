{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arjun/Desktop/ReactMoviesProject/src/containers/TvSeriesContainer.js\";\nimport React, { Component } from \"react\";\nimport IsLoading from \"../components/IsLoading\";\nimport { getTvSeries } from \"../services/api\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TvSeries from \"../components/TvSeries\";\n\nclass TvSeriesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tvSeries: [],\n      isLoading: false\n    };\n    this.tvSeriesOptions = [\"airing_today\", \"on_the_air\", \"popular\", \"top_rated\"];\n\n    this.fetchTvSeries = e => {\n      this.setState({\n        isLoading: true\n      });\n      getTvSeries(e).then(tvSeries => {\n        this.setState({\n          tvSeries,\n          isLoading: false\n        });\n      }, error => {\n        alert(\"Error\", `Something went wrong! ${error}`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTvSeries(this.tvSeriesOptions[0]);\n  }\n\n  render() {\n    const {\n      isLoading,\n      tvSeries\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-age-native-simple\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          native: true,\n          label: \"Category\",\n          inputProps: {\n            name: \"category\",\n            id: \"outlined-age-native-simple\"\n          },\n          onChange: e => this.fetchTvSeries(e.target.value),\n          children: this.tvSeriesOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: [\" \", type, \" \"]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(IsLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(TvSeries, {\n        required: tvSeries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TvSeriesContainer;","map":{"version":3,"sources":["/Users/arjun/Desktop/ReactMoviesProject/src/containers/TvSeriesContainer.js"],"names":["React","Component","IsLoading","getTvSeries","InputLabel","FormControl","Select","TvSeries","TvSeriesContainer","state","tvSeries","isLoading","tvSeriesOptions","fetchTvSeries","e","setState","then","error","alert","componentDidMount","render","name","id","target","value","map","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCQ,KADwC,GAChC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADgC;AAAA,SAMxCC,eANwC,GAMtB,CAAC,cAAD,EAAiB,YAAjB,EAA+B,SAA/B,EAA0C,WAA1C,CANsB;;AAAA,SAYxCC,aAZwC,GAYvBC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE;AADC,OAAd;AAIAR,MAAAA,WAAW,CAACW,CAAD,CAAX,CAAeE,IAAf,CACGN,QAAD,IAAc;AACZ,aAAKK,QAAL,CAAc;AACZL,UAAAA,QADY;AAEZC,UAAAA,SAAS,EAAE;AAFC,SAAd;AAID,OANH,EAOGM,KAAD,IAAW;AACTC,QAAAA,KAAK,CAAC,OAAD,EAAW,yBAAwBD,KAAM,EAAzC,CAAL;AACD,OATH;AAWD,KA5BuC;AAAA;;AAQxCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,aAAL,CAAmB,KAAKD,eAAL,CAAqB,CAArB,CAAnB;AACD;;AAoBDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAA0B,KAAKD,KAArC;AACA,wBACE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC,UAArB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,UAAU,EAAE;AAAEY,YAAAA,IAAI,EAAE,UAAR;AAAoBC,YAAAA,EAAE,EAAE;AAAxB,WAHd;AAIE,UAAA,QAAQ,EAAGR,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAC,CAACS,MAAF,CAASC,KAA5B,CAJnB;AAAA,oBAMG,KAAKZ,eAAL,CAAqBa,GAArB,CAA0BC,IAAD,iBACxB;AAAmB,YAAA,KAAK,EAAEA,IAA1B;AAAA,uBACG,GADH,EAEGA,IAFH,EAES,GAFT;AAAA,aAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAiBGf,SAAS,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAmB,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,cAjB/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AArDuC;;AAwD1C,eAAeF,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport IsLoading from \"../components/IsLoading\";\nimport { getTvSeries } from \"../services/api\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TvSeries from \"../components/TvSeries\";\n\nclass TvSeriesContainer extends Component {\n  state = {\n    tvSeries: [],\n    isLoading: false,\n  };\n\n  tvSeriesOptions = [\"airing_today\", \"on_the_air\", \"popular\", \"top_rated\"];\n\n  componentDidMount() {\n    this.fetchTvSeries(this.tvSeriesOptions[0]);\n  }\n\n  fetchTvSeries = (e) => {\n    this.setState({\n      isLoading: true,\n    });\n\n    getTvSeries(e).then(\n      (tvSeries) => {\n        this.setState({\n          tvSeries,\n          isLoading: false,\n        });\n      },\n      (error) => {\n        alert(\"Error\", `Something went wrong! ${error}`);\n      }\n    );\n  };\n\n  render() {\n    const { isLoading, tvSeries } = this.state;\n    return (\n      <div>\n        <FormControl variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-age-native-simple\">Category</InputLabel>\n          <Select\n            native\n            label=\"Category\"\n            inputProps={{ name: \"category\", id: \"outlined-age-native-simple\" }}\n            onChange={(e) => this.fetchTvSeries(e.target.value)}\n          >\n            {this.tvSeriesOptions.map((type) => (\n              <option key={type} value={type}>\n                {\" \"}\n                {type}{\" \"}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        {isLoading ? <IsLoading /> : <TvSeries required={tvSeries} />}\n      </div>\n    );\n  }\n}\n\nexport default TvSeriesContainer;\n"]},"metadata":{},"sourceType":"module"}