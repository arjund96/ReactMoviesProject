{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arjun/Desktop/ReactMoviesProject/src/containers/SearchContainer.js\";\nimport React, { Component } from \"react\";\nimport MainCard from \"../components/MainCard\";\nimport { getSearch } from \"../services/api\";\nimport FormSearch from \"../components/FormSearch\";\n\nclass SearchContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userSearch: null,\n      isLoaded: true,\n      type: \"\",\n      results: []\n    };\n\n    this.fetchData = event => {\n      const {\n        userSearch,\n        type\n      } = this.state;\n      event.preventDefault();\n      getSearch(userSearch, type).then(res => {\n        this.setState({\n          results: res,\n          isLoaded: false\n        });\n      }, error => {\n        alert(\"Error\", `Something went wrong! ${error}`);\n      });\n    };\n\n    this.handleInputChange = userSearch => {\n      this.setState({\n        userSearch: userSearch,\n        isLoaded: true\n      });\n    };\n\n    this.handleSelectChange = type => {\n      this.setState({\n        type: type\n      });\n    };\n  }\n\n  render() {\n    const {\n      results,\n      isLoaded\n    } = this.state;\n\n    if (isLoaded === true) {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"results-main\",\n        children: [/*#__PURE__*/_jsxDEV(FormSearch, {\n          onInputChange: this.handleInputChange,\n          onSubmit: this.fetchData,\n          onSelectChange: this.handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"result-change\",\n          className: \"results-text\",\n          children: \"Please Enter a Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } else if (isLoaded === false) {\n      const baseImagePath = \"https://image.tmdb.org/t/p/w500\";\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"results-main\",\n        children: [/*#__PURE__*/_jsxDEV(FormSearch, {\n          onInputChange: this.handleInputChange,\n          onSubmit: this.fetchData,\n          onSelectChange: this.handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-cards\",\n          children: results.map(item => /*#__PURE__*/_jsxDEV(MainCard, {\n            title: item.title,\n            date: item.release_date,\n            popularity: item.popularity,\n            overview: item.overview,\n            imageUrl: baseImagePath + `${item.poster_path}`,\n            id: item.id\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default SearchContainer;","map":{"version":3,"sources":["/Users/arjun/Desktop/ReactMoviesProject/src/containers/SearchContainer.js"],"names":["React","Component","MainCard","getSearch","FormSearch","SearchContainer","constructor","props","state","userSearch","isLoaded","type","results","fetchData","event","preventDefault","then","res","setState","error","alert","handleInputChange","handleSelectChange","render","baseImagePath","map","item","title","release_date","popularity","overview","poster_path","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MainCard from \"../components/MainCard\";\nimport { getSearch } from \"../services/api\";\nimport FormSearch from \"../components/FormSearch\";\n\nclass SearchContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    userSearch: null,\n    isLoaded: true,\n    type: \"\",\n    results: [],\n  };\n\n  fetchData = (event) => {\n    const { userSearch, type } = this.state;\n    event.preventDefault();\n    getSearch(userSearch, type).then(\n      (res) => {\n        this.setState({\n          results: res,\n          isLoaded: false,\n        });\n      },\n      (error) => {\n        alert(\"Error\", `Something went wrong! ${error}`);\n      }\n    );\n  };\n\n  handleInputChange = (userSearch) => {\n    this.setState({\n      userSearch: userSearch,\n      isLoaded: true,\n    });\n  };\n  handleSelectChange = (type) => {\n    this.setState({\n      type: type,\n    });\n  };\n\n  render() {\n    const { results, isLoaded } = this.state;\n\n    if (isLoaded === true) {\n      return (\n        <main className=\"results-main\">\n          <FormSearch\n            onInputChange={this.handleInputChange}\n            onSubmit={this.fetchData}\n            onSelectChange={this.handleSelectChange}\n          />\n          <div id=\"result-change\" className=\"results-text\">\n            Please Enter a Search\n          </div>\n        </main>\n      );\n    } else if (isLoaded === false) {\n      const baseImagePath = \"https://image.tmdb.org/t/p/w500\";\n      return (\n        <main className=\"results-main\">\n          <FormSearch\n            onInputChange={this.handleInputChange}\n            onSubmit={this.fetchData}\n            onSelectChange={this.handleSelectChange}\n          />\n          <div className=\"result-cards\">\n            {results.map((item) => \n              (\n              <MainCard\n                key={item.id}\n                title={item.title}\n                date={item.release_date}\n                popularity={item.popularity}\n                overview={item.overview}\n                imageUrl={baseImagePath + `${item.poster_path}`}\n                id={item.id}\n              />\n            ))}\n          </div>\n        </main>\n      );\n    }\n  }\n}\n\nexport default SearchContainer;\n"]},"metadata":{},"sourceType":"module"}